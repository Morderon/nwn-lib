There are various environment variables you can configure to adjust various parts of nwn-lib.

<b>All of them are optional, and, in fact, can waste your time!</b>

Under linux, just add them to your shell environment (usually .bashrc), like so:

  export NWN_LIB_DEBUG=0

== NWN_LIB_IN_ENCODING

The character encoding your local data files are in. Defaults to ISO-8859-1.

== NWN_LIB_PRETTY_JSON

Set to non-nil to make :json print pretty output (with whitespace) instead of a spaghetti
bowl. nwn-lib returns compact json output, by default. Does not affect reading json.

== NWN_LIB_DEBUG

nwn-lib prints, by default, various informational and warning messages to stderr.
This is a non-optimal solution, but needed to indicate various problems or misshapes with
resource files you are working with.

If you want to suppress them for some reason, set NWN_LIB_DEBUG to "0" or "off". Any
other value will indicate that you want to see the messages.

== NWN_LIB_RESREF16

Set this to "1" if you are sure that you are only working with NWN1 files. This will
make nwn-lib fail hard (Exception) on invalid resref lengths, and might save you some
time tracking things down.

Note that nwn-lib takes a parameter that can force a specific NWN version.

=== NWN_LIB_RESREF32

Set this to "1" if you are working with NWN2 files and do not want to see the warnings
generated by too long resref values.

Note that nwn-lib takes a parameter that can force a specific NWN version.

== NWN_LIB_2DA_LOCATION

Set to a path containing all 2da files to initialize the 2da cache. This is needed for
most interactive helpers and a few gizmos, and, of course, for TwoDA::Cache.

== NWN_LIB_TWODA_NEWLINE

Specify the type of newline that Table#to_2da uses to join rows.
 0 for windows newlines: \r\n (default)
 1 for unix newlines: \n
 2 for caret return only: \r
