#!/usr/bin/ruby
require 'rubygems'
require 'optparse'
require 'nwn/all'
require 'irb'
require 'irb/completion'

OptionParser.new do |o|
  o.banner = "Usage: nwn-irb [file]"
end.parse!

$file = ARGV.shift
$gff = nil

def save destination = nil
  raise ArgumentError,
    "Cannot use save shortcut unless you opened irb with a parameter. Use write instead." unless
    $file || destination

  File.expand_path(destination ||= $file)
  $stderr.puts "Saving to `#{destination}' .."
  File.open(destination, "w") {|d|
    NWN::Gff.write(d, NWN::Gff.guess_file_format(destination), $gff)
  }
  $stderr.puts "saved."
end


def read file
  file = File.expand_path(file || $file)
  $stderr.puts "Reading `#{file}' .."
  fmt = NWN::Gff.guess_file_format(file)
  $gff = NWN::Gff.read(IO.read(file), fmt)

  $stderr.puts "Your GFF file is in `$gff' (data_type: #{$gff.data_type.inspect})."
  $stderr.puts "Type `save' to save to the filename it came from (make a backup!), `exit' (or Ctrl+D) to exit (without saving)."
  $stderr.puts "To save to a different location, type `save \"path/to/new/location.ext\"'."
  nil
end

include NWN

if $file
  read($file)
else
  $stderr.puts "Type `read \"file\"' to load `file' into `$gff' (or use the API: var = NWN::Gff.read(...)."
end
$stderr.puts ""

IRB.start
