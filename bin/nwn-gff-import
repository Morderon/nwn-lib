#!/usr/bin/ruby
require 'rubygems'
require 'optparse'
require 'nwn/gff'
require 'nwn/helpers'
require 'yaml'

format = nil

OptionParser.new do |o|
  o.banner = "Usage: nwn-gff-import [options] file/- outfile/-"
  o.on "-y", "--yaml", "Import as yaml" do
    format = :yaml
  end
  o.on "-m", "--marshal", "Import as native ruby marshal data" do
    format = :marshal
  end
end.parse!

infile = ARGV.shift or begin
  $stderr.puts "Required argument: filename to read, or - for stdin (try -h)."
  exit 1
end
outfile = ARGV.shift or begin
  $stderr.puts "Required argument: filename to write, or - for stdout (try -h)."
  exit 1
end

if infile == "-"
  inbytes = $stdin.read
else
  inbytes = IO.read(infile)
end

data = nil

case format
  when :yaml
    data = YAML.load(inbytes)
  when :marshal
    data = Marshal.load(inbytes)
  else
    raise ArgumentError, "Unknown format; try -h"
end

raise ArgumentError, "Input stream is NOT a valid gff object" unless
  data.is_a?(NWN::Gff::Gff)

outbytes = NWN::Gff::Writer.dump(data)
if outfile == "-"
  puts outbytes
else
  File.open(outfile, "w") {|f| f.write(outbytes) }
end
